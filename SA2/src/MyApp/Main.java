/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package MyApp;

import MyLibs.AboutPage;
import MyLibs.HelpPage;
import MyLibs.QuizSystem;
import java.awt.Cursor;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Group 4
 */
public class Main extends javax.swing.JFrame {
    /**
     * Creates new form Main
     */
    private GamePanel game;
    String abt;
    
    public Main() {
        // initialize game
        game = new GamePanel();
        add(game);
        
        initComponents();
        
        // frame properties
        setResizable(false);
        setTitle("Brick Breaker : Quiz Edition");
        setLocationRelativeTo(null);
        try {
            setIconImage(new javax.swing.ImageIcon(getClass().getResource("/assets/icon/ball.png")).getImage()
           );
        } catch (Exception e) {}
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        aboutButton = new javax.swing.JMenuItem();
        help = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        newGameButton = new javax.swing.JMenuItem();
        quitButton = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        epowerups = new javax.swing.JCheckBoxMenuItem();
        equiz = new javax.swing.JCheckBoxMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        PadControls = new javax.swing.JMenu();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem3 = new javax.swing.JRadioButtonMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        eBrickGuide = new javax.swing.JCheckBoxMenuItem();
        jmQuiz = new javax.swing.JMenu();
        jmiChooseFile = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenuBar1.setBackground(new java.awt.Color(0, 0, 0));
        jMenuBar1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jMenuBar1.setFont(new java.awt.Font("Monospaced", 0, 15)); // NOI18N

        menuFile.setBackground(new java.awt.Color(0, 0, 0));
        menuFile.setForeground(new java.awt.Color(255, 255, 255));
        menuFile.setMnemonic('A');
        menuFile.setText("App");
        menuFile.setFont(new java.awt.Font("Monospaced", 0, 15)); // NOI18N
        menuFile.setOpaque(true);

        aboutButton.setBackground(new java.awt.Color(0, 0, 0));
        aboutButton.setFont(new java.awt.Font("Monospaced", 0, 15)); // NOI18N
        aboutButton.setForeground(new java.awt.Color(255, 255, 255));
        aboutButton.setText("About");
        aboutButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        aboutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutButtonActionPerformed(evt);
            }
        });
        menuFile.add(aboutButton);

        help.setBackground(new java.awt.Color(0, 0, 0));
        help.setFont(new java.awt.Font("Monospaced", 0, 15)); // NOI18N
        help.setForeground(new java.awt.Color(255, 255, 255));
        help.setText("Help");
        help.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpActionPerformed(evt);
            }
        });
        menuFile.add(help);

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setOpaque(true);
        menuFile.add(jSeparator1);

        newGameButton.setBackground(new java.awt.Color(0, 0, 0));
        newGameButton.setFont(new java.awt.Font("Monospaced", 0, 15)); // NOI18N
        newGameButton.setForeground(new java.awt.Color(255, 255, 255));
        newGameButton.setText("New Game");
        newGameButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        newGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGameButtonActionPerformed(evt);
            }
        });
        menuFile.add(newGameButton);

        quitButton.setBackground(new java.awt.Color(0, 0, 0));
        quitButton.setFont(new java.awt.Font("Monospaced", 0, 15)); // NOI18N
        quitButton.setForeground(new java.awt.Color(255, 255, 255));
        quitButton.setText("Quit");
        quitButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        quitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitButtonActionPerformed(evt);
            }
        });
        menuFile.add(quitButton);

        jMenuBar1.add(menuFile);

        jMenu4.setBackground(new java.awt.Color(0, 0, 0));
        jMenu4.setForeground(new java.awt.Color(255, 255, 255));
        jMenu4.setText("Settings");
        jMenu4.setFont(new java.awt.Font("Monospaced", 0, 15)); // NOI18N

        epowerups.setBackground(new java.awt.Color(0, 0, 0));
        epowerups.setFont(new java.awt.Font("Monospaced", 0, 15)); // NOI18N
        epowerups.setForeground(new java.awt.Color(255, 255, 255));
        epowerups.setSelected(true);
        epowerups.setText("Enable Powerups");
        epowerups.setOpaque(true);
        epowerups.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                epowerupsActionPerformed(evt);
            }
        });
        jMenu4.add(epowerups);

        equiz.setBackground(new java.awt.Color(0, 0, 0));
        equiz.setFont(new java.awt.Font("Monospaced", 0, 15)); // NOI18N
        equiz.setForeground(new java.awt.Color(255, 255, 255));
        equiz.setText("Enable Quiz");
        equiz.setEnabled(false);
        equiz.setOpaque(true);
        equiz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equizActionPerformed(evt);
            }
        });
        jMenu4.add(equiz);
        jMenu4.add(jSeparator2);

        PadControls.setBackground(new java.awt.Color(0, 0, 0));
        PadControls.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        PadControls.setForeground(new java.awt.Color(255, 255, 255));
        PadControls.setText("Paddle Controls");
        PadControls.setFont(new java.awt.Font("Monospaced", 0, 15)); // NOI18N
        PadControls.setOpaque(true);

        jRadioButtonMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_K, 0));
        jRadioButtonMenuItem1.setBackground(new java.awt.Color(0, 0, 0));
        buttonGroup1.add(jRadioButtonMenuItem1);
        jRadioButtonMenuItem1.setFont(new java.awt.Font("Monospaced", 0, 15)); // NOI18N
        jRadioButtonMenuItem1.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("Use Keys");
        jRadioButtonMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem1ActionPerformed(evt);
            }
        });
        PadControls.add(jRadioButtonMenuItem1);

        jRadioButtonMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, 0));
        jRadioButtonMenuItem3.setBackground(new java.awt.Color(0, 0, 0));
        buttonGroup1.add(jRadioButtonMenuItem3);
        jRadioButtonMenuItem3.setFont(new java.awt.Font("Monospaced", 0, 15)); // NOI18N
        jRadioButtonMenuItem3.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonMenuItem3.setText("Use Mouse Wheel");
        jRadioButtonMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem3ActionPerformed(evt);
            }
        });
        PadControls.add(jRadioButtonMenuItem3);

        jMenu4.add(PadControls);
        jMenu4.add(jSeparator3);

        eBrickGuide.setBackground(new java.awt.Color(0, 0, 0));
        eBrickGuide.setFont(new java.awt.Font("Monospaced", 0, 15)); // NOI18N
        eBrickGuide.setForeground(new java.awt.Color(255, 255, 255));
        eBrickGuide.setText("Enable Brick Guide");
        eBrickGuide.setOpaque(true);
        eBrickGuide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eBrickGuideActionPerformed(evt);
            }
        });
        jMenu4.add(eBrickGuide);

        jMenuBar1.add(jMenu4);

        jmQuiz.setBackground(new java.awt.Color(0, 0, 0));
        jmQuiz.setForeground(new java.awt.Color(255, 255, 255));
        jmQuiz.setText("Quiz");
        jmQuiz.setFont(new java.awt.Font("Monospaced", 0, 15)); // NOI18N

        jmiChooseFile.setBackground(new java.awt.Color(0, 0, 0));
        jmiChooseFile.setFont(new java.awt.Font("Monospaced", 0, 15)); // NOI18N
        jmiChooseFile.setForeground(new java.awt.Color(255, 255, 255));
        jmiChooseFile.setText("Choose File");
        jmiChooseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiChooseFileActionPerformed(evt);
            }
        });
        jmQuiz.add(jmiChooseFile);

        jMenuBar1.add(jmQuiz);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGameButtonActionPerformed

        game.newGame();
        game.Score = 0;
        game.liveCount = 3;
        game.isGameOver = 0;
        game.totalCorrectAnswers = 0;
        game.powerupsTaken = 0; 
        game.questionsTaken = 0;        
    }//GEN-LAST:event_newGameButtonActionPerformed

    private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_quitButtonActionPerformed

    private void jRadioButtonMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem1ActionPerformed
        // set movement mode to keys
        game.setPaddleMovementMode(0);
        
        // reset cursor
        game.setCursor(new Cursor(Cursor.DEFAULT_CURSOR) );
    }//GEN-LAST:event_jRadioButtonMenuItem1ActionPerformed

    private void jRadioButtonMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem3ActionPerformed
        // set movement mode to mouse wheel
        game.setPaddleMovementMode(1);

        // set cursor
        game.setCursor(new Cursor(Cursor.CROSSHAIR_CURSOR) );
    }//GEN-LAST:event_jRadioButtonMenuItem3ActionPerformed

    private void aboutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutButtonActionPerformed
        AboutPage about = new AboutPage(this, true);
        about.setLocationRelativeTo(this);
        about.setResizable(false);
        about.setVisible(true);
    }//GEN-LAST:event_aboutButtonActionPerformed

    private void helpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpActionPerformed
        HelpPage help = new HelpPage(this, true);
        help.setLocationRelativeTo(this);
        help.setResizable(false);
        help.setVisible(true);
    }//GEN-LAST:event_helpActionPerformed

    private void jmiChooseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiChooseFileActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser();
        jfc.setCurrentDirectory(new File("src\\Assets"));
        int fileSelected = jfc.showOpenDialog(this);
        
        //this literally just turns the file name into a string and removes the ".txt" from it
        if (fileSelected == JFileChooser.APPROVE_OPTION){
            String fileLocationPreSub = (jfc.getSelectedFile().getName());
            String fileLocationPostSub = fileLocationPreSub.substring(0, fileLocationPreSub.length()-4);
            JOptionPane.showMessageDialog(this,fileLocationPreSub+" has been chosen.");

            // update the quiz system with the selected file
            QuizSystem qs = game.getQs();
            
            qs.getTextFile(jfc.getSelectedFile().toString() );
            
            // enable quiz system check box
            equiz.setEnabled(true);
        }
    }//GEN-LAST:event_jmiChooseFileActionPerformed

    private void epowerupsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_epowerupsActionPerformed
        if (game.isEnablePowerups() ) {
            game.setEnablePowerups(false);
            // prompt
            JOptionPane.showMessageDialog(this, "Powerups were disabled.", "Powerups enabled", JOptionPane.INFORMATION_MESSAGE);            
        }
        else {
            game.setEnablePowerups(true);
            // prompt
            JOptionPane.showMessageDialog(this, "Powerups were enabled.", "Powerups disabled", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_epowerupsActionPerformed

    private void equizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equizActionPerformed
        // TODO add your handling code here:
        if (game.isEnableQuizSystem()) {
            game.setEnableQuizSystem(false);
            // prompt
            JOptionPane.showMessageDialog(this, "Quiz system was disabled.", "Quiz System disabled", JOptionPane.INFORMATION_MESSAGE);            
        }
        else {
            game.setEnableQuizSystem(true);
            
            // prompt
            JOptionPane.showMessageDialog(this, "Quiz system was enabled.", "Quiz System enabled", JOptionPane.INFORMATION_MESSAGE);   
            
            // prompt
            JOptionPane.showMessageDialog(this, "Bear in mind that you'll have to start a new game \nor progress to a new level"
                    + " for the quiz to be applied.", "Notice", JOptionPane.WARNING_MESSAGE);              
        }        
    }//GEN-LAST:event_equizActionPerformed

    private void eBrickGuideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eBrickGuideActionPerformed
        if (game.isEnableBrickGuide()) {
            game.setEnableBrickGuide(false);
            // prompt
            JOptionPane.showMessageDialog(this, "Brick guide was disabled.", "Brick Guide enabled", JOptionPane.INFORMATION_MESSAGE);            
        }
        else {
            game.setEnableBrickGuide(true);
            
            // prompt
            JOptionPane.showMessageDialog(this, "Brick guide was enabled.", "Brick Guide disabled", JOptionPane.INFORMATION_MESSAGE);              
        }
    }//GEN-LAST:event_eBrickGuideActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Main().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu PadControls;
    private javax.swing.JMenuItem aboutButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBoxMenuItem eBrickGuide;
    private javax.swing.JCheckBoxMenuItem epowerups;
    private javax.swing.JCheckBoxMenuItem equiz;
    private javax.swing.JMenuItem help;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JMenu jmQuiz;
    private javax.swing.JMenuItem jmiChooseFile;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenuItem newGameButton;
    private javax.swing.JMenuItem quitButton;
    // End of variables declaration//GEN-END:variables

}

